(load "p2-67")
(define (encode-symbol bit tree)
    (define (iter bit current res)
    (if (leaf? current)
        (if (eq? bit (symbolleaf current))
            res
            (error "not fond")
        )
        (cond ((elementoflist bit (symbols (left-branch current)))(iter bit (left-branch current)(append res '(0))))
            ((elementoflist bit (symbols (right-branch current))) (iter bit (right-branch current) (append res '(1)) ))
            (else (error "nnot found"))
        )
        
    )
    )
    (iter bit tree '())
)
(define (elementoflist element list)
    (cond ((null? list) #f)
       ( (eq? (car list) element) #t ) 
       (else (elementoflist element (cdr list)))
    )
)
(define (encode message tree)
    (if (null? message)
        '()
        (append (encode-symbol (car message) tree)
        (encode (cdr message) tree)
        )
    )
)
(define mes '(a c a b b d a))