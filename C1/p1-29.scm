(define (sum term a next b)
(if (> a b) 0 (+ (term a) (sum term (next a) next b))))
(define (inc n) (+ n 1))
(define (cube n) (* n n n))
(define (getIndex index n)
    (cond ((or (= index 1) (= index n)) 1)
    ((= (remainder index 2) 0) 2)
    (else 4)) )
(define (yintergral f a b n)
    (define (geth a b n)(/(- b a)n))
    (define (yterm k ) 
    ()
    (* (f (+ a (* k (geth a b n)))) (getIndex k n) ) )
   (* (sum yterm 0 inc n) (/ (geth a b n) 3)))