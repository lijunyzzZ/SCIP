(define (sum a b)(+ a b))
(define (product a b)(* a b))
(define (inc n) (+ n 1))
(define (identity n) n)
(define (acc combiner nullvalue term a next b) 
    (if (> a b) nullvalue (combiner (term a) (acc combiner nullvalue term (next a ) next b))))
(define (acc-Iter combiner nullvalue term a next b)
    (define (acciter a result)
        (if (> a b ) result (acciter (next a) (combiner result (term a) ))))
    (acciter (next a) a))